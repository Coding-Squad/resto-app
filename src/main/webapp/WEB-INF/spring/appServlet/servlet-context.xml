<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing
        infrastructure -->

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>
    <context:component-scan base-package="com.reminisense.ra.controllers"/>
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving
        up static resources in the ${webappRoot}/resources directory -->
    <mvc:default-servlet-handler/>
    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <beans:bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <beans:bean id="multipartResolver"
                class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- setting maximum upload size -->
        <beans:property name="maxUploadSize" value="100000"/>

    </beans:bean>

    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
                class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="packagesToScan" value="com.reminisense.ra.entity"/>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/restoapp_db</beans:prop>
                <beans:prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>


    <!-- Configure Hibernate 4 Session Factory -->
    <beans:bean id="sessionFactory"
                class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

        <beans:property name="dataSource">
            <beans:ref bean="dataSource" />
        </beans:property>

        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
            </beans:props>
        </beans:property>
        <beans:property name="annotatedClasses">
            <beans:list>
                <beans:value>com.reminisense.ra.entity.CustomerEntity</beans:value> <!-- Entity classes-->
            </beans:list>
        </beans:property>

    </beans:bean>

    <!-- Inject the transaction manager  -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>

    <!-- Inject the instance to customerDAO reference with adding sessionFactory -->
    <beans:bean id="customerDAO" class="com.reminisense.ra.dao.CustomerDaoImpl">
        <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" />
    </beans:bean>



    <!-- Enable annotation driven controllers, validation etc... -->
    <mvc:annotation-driven />

    <context:component-scan base-package="com.reminisense.ra.controllers" />



    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
    in the /WEB-INF/views directory -->
    <beans:bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=""/>
    </beans:bean>

    <beans:bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename" value="/WEB-INF/messages" />
    </beans:bean>

    <!-- Enables the Spring MVC @Controller programming model -->
    <annotation-driven/>
    <context:component-scan base-package="com.reminisense.ra.controllers"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources
        in the /WEB-INF/views directory -->
    <beans:bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=""/>
    </beans:bean>

    <beans:bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <beans:property name="prefix">
            <beans:value>/WEB-INF/pages/</beans:value>
        </beans:property>
        <beans:property name="suffix">
            <beans:value>.jsp</beans:value>
        </beans:property>
    </beans:bean>

</beans:beans>
