<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:sec="http://www.springframework.org/schema/security"
        xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
    <!-- Root Context: defines shared resources visible to all other web components -->
    <context:property-placeholder location="classpath*:system.properties"/>
    <context:component-scan base-package="com.reminisense.ra"/>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider>
            <sec:user-service>
                <sec:user name="${superadmin.user}" password="${superadmin.pass}" authorities="ROLE_ADMIN"/>
                <sec:user name="guard" password="${superadmin.pass}" authorities="ROLE_SECURITY"/>
                <sec:user name="user" password="${superadmin.pass}" authorities="ROLE_USER"/>
            </sec:user-service>
        </sec:authentication-provider>
        <sec:authentication-provider ref="authProvider"/>
    </sec:authentication-manager>

    <sec:http entry-point-ref="restAuthenticationEntryPoint" authentication-manager-ref="authenticationManager"
              create-session="stateless">
        <sec:custom-filter ref="authenticationTokenFilter" position="PRE_AUTH_FILTER"/>
        <sec:intercept-url pattern="/api/asset/**" access="hasAnyRole('ROLE_ADMIN','ROLE_SECURITY')"/>
        <sec:intercept-url pattern="/api/company/**" access="hasAnyRole('ROLE_ADMIN')"/>
        <sec:intercept-url pattern="/api/company/**" access="hasAnyRole('ROLE_USER')"/>
        <sec:intercept-url pattern="/api/list/**" access="hasAnyRole('ROLE_ADMIN','ROLE_SECURITY')"/>
        <sec:csrf disabled="true"/>
        <sec:logout/>
    </sec:http>

    <beans:bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <beans:bean id="myFailureHandler" class=
            "org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"/>

    <beans:bean id="authProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="userDetailsService"/>
        <beans:property name="passwordEncoder" ref="bCryptPasswordEncoder"/>
    </beans:bean>
    <beans:bean class="java.net.URI" id="dbUrl">
        <beans:constructor-arg value="#{systemEnvironment['DO_DATABASE_URL']}"/>
    </beans:bean>
    <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
                destroy-method="close">
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <beans:property name="url" value="#{ 'jdbc:mysql://' + @dbUrl.getHost() + @dbUrl.getPath() }"/>
        <beans:property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <beans:property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
    </beans:bean>

    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
                class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="packagesToScan" value="com.reminisense.ra.entity"/>
        <beans:property name="hibernateProperties">
            <beans:props>
                <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
                </beans:prop>
                <beans:prop key="hibernate.show_sql">true</beans:prop>
                <beans:prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/feather_assets</beans:prop>
                <beans:prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <beans:bean id="transactionManager"
                class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory"
                        ref="hibernate4AnnotatedSessionFactory"/>
    </beans:bean>
</beans:beans>
